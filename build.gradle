buildscript {
    ext {
        versions_plugin_version = '0.44.0'
        kotlin_version = '1.8.0'
        h2_version = '2.1.214'
        sqlite_version = '3.40.0.0'
        javafx_plugin_version = '0.0.13'
        javafx_version = '18.0.1'
        junit_version = '4.13.2'
        mockk_version = '1.13.4'
    }

    repositories {
        mavenCentral()
        gradlePluginPortal()
    }
}

plugins {
    id "com.github.ben-manes.versions" version "$versions_plugin_version"
    id "org.jetbrains.kotlin.jvm" version "$kotlin_version"
}

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'org.jetbrains.kotlin.jvm'

    version = '0.1-SNAPSHOT'
    archivesBaseName = "${rootProject.name}-${project.name}"

    kotlin {
        jvmToolchain {
            languageVersion = JavaLanguageVersion.of(18)
        }
    }

    dependencies {
        testImplementation "junit:junit:$junit_version"
    }
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
    // disallow release candidates as upgradable versions from stable versions
    rejectVersionIf {
        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)
    }
}
